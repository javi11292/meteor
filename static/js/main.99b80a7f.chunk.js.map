{"version":3,"sources":["components/Main/useLogic.js","components/Main/useStyles.js","hooks/useFetch.js","libraries/constants.js","hooks/useAPI.js","reducers/index.js","components/App/useStyles.js","components/Autocomplete/useStyles.js","components/Autocomplete/useLogic.js","components/Autocomplete/index.js","components/LoadingBar/useStyles.js","components/LoadingBar/index.js","components/Main/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["BATCH","iterate","cities","citiesByLetter","arguments","length","undefined","pos","Promise","resolve","i","city","name","charAt","toUpperCase","slice","letter","push","nextPos","setImmediate","useLogic","classes","useStyles","_useStore","useStore","setCities","Object","C_Users_Everis_Documents_Node_meteor_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","_useState","useState","_useState2","cityName","setCityName","_useState3","_useState4","currentCity","setCurrentCity","_useState5","_useState6","showDialog","setShowDialog","_useAPI","useAPI","getCurrentWeather","getCities","inputRef","useRef","useEffect","_loadCities","C_Users_Everis_Documents_Node_meteor_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_Everis_Documents_Node_meteor_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","sent","t0","t1","stop","apply","this","loadCities","_makeRequest","_callee2","_context2","id","makeRequest","onChange","_ref","target","value","onSelect","current","blur","onFocus","onBlur","document","activeElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","makeStyles","theme","root","height","display","flexDirection","alignItems","weatherInfo","flex","citySearchContainer","position","margin","spacing","width","citySearch","outline","borderRadius","useFetch","setLoading","slicedToArray","get","useCallback","url","asyncToGenerator","regenerator_default","result","response","fetch","text","JSON","parse","console","log","abrupt","API_KEY","concat","window","location","protocol","hostname","port","process","reducers","loading","state","reducer","objectSpread","typography","body1","top","transform","list","MAX_CITIES","props","filteredCities","setFilteredCities","regExp","RegExp","match","sort","b","localeCompare","_unused","filterCities","Autocomplete","React","memo","_useLogic","show","react_default","createElement","Paper","className","List","map","ListItem","key","onClick","button","ListItemText","primary","country","zIndex","bar","backgroundColor","barColorPrimary","LoadingBar","Fade","timeout","in","LinearProgress","Main","components_LoadingBar","components_Autocomplete","TextField","fullWidth","InputProps","notchedOutline","placeholder","variant","App","dist","CssBaseline","components_Main","isLocalhost","Boolean","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","getElementById","URL","href","origin","addEventListener","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"0KAKMA,EAAQ,IAEd,SAASC,EAAQC,GAAsC,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAb,GAAIG,EAASH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EAChD,OAAO,IAAII,QAAQ,SAAAC,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAOU,IAAK,CAC5B,IAAMC,EAAOT,EAAOK,EAAMG,GAC1B,IAAKC,EAAM,MAEXA,EAAKC,KAAOD,EAAKC,KAAKC,OAAO,GAAGC,cAAgBH,EAAKC,KAAKG,MAAM,GAChE,IAAMC,EAASL,EAAKC,KAAKC,OAAO,GAE3BV,EAAea,KAASb,EAAea,GAAU,IAEtDb,EAAea,GAAQC,KAAKN,GAGhC,IAAMO,EAAUX,EAAMP,EAClBkB,EAAUhB,EAAOG,OAAQI,EAAQN,GAChCgB,EAAa,kBAAMV,EAAQR,EAAQC,EAAQC,EAAgBe,QAmDzDE,IA/Cf,WACI,IAAMC,EAAUC,cADAC,EAEMC,mBAAS,UAAtBC,EAFOC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,MAAAK,EAGgBC,mBAAS,IAHzBC,EAAAJ,OAAAC,EAAA,EAAAD,CAAAE,EAAA,GAGTG,EAHSD,EAAA,GAGCE,EAHDF,EAAA,GAAAG,EAIsBJ,qBAJtBK,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAITE,EAJSD,EAAA,GAIIE,EAJJF,EAAA,GAAAG,EAKoBR,oBAAS,GAL7BS,EAAAZ,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GAKTE,EALSD,EAAA,GAKGE,EALHF,EAAA,GAAAG,EAMyBC,cAAjCC,EANQF,EAMRE,kBAAmBC,EANXH,EAMWG,UACrBC,EAAWC,mBAqCjB,OAnCAC,oBAAU,WAAM,SAAAC,IAAA,OAAAA,EAAAtB,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAC,EAAAC,KACZ,SAAAC,IAAA,IAAAnD,EAAA,OAAAgD,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACyBb,IADzB,cACU1C,EADVqD,EAAAG,KAAAH,EAAAI,GAEIlC,EAFJ8B,EAAAE,KAAA,EAEoBxD,EAAQC,GAF5B,OAAAqD,EAAAK,GAAAL,EAAAG,MAAA,EAAAH,EAAAI,IAAAJ,EAAAK,IAAA,wBAAAL,EAAAM,SAAAR,OADYS,MAAAC,KAAA3D,YAAA,WAAA4C,EAAAc,MAAAC,KAAA3D,WAMZ4D,IACD,CAACvC,EAAWmB,IAEfG,oBAAU,WAAM,SAAAkB,IAAA,OAAAA,EAAAvC,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAC,EAAAC,KACZ,SAAAc,IAAA,OAAAhB,EAAAC,EAAAG,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAAAU,EAAAV,KAAA,EACUd,EAAkBR,EAAYiC,IADxC,wBAAAD,EAAAN,SAAAK,OADYJ,MAAAC,KAAA3D,WAKR+B,GALQ,WAAA8B,EAAAH,MAAAC,KAAA3D,WAKKiE,IAClB,CAAC1B,EAAmBR,IAoBhB,CAAEd,UAASU,WAAUuC,SAlB5B,SAAAC,GAA8B,IAAVC,EAAUD,EAAVC,OAChBxC,EAAYwC,EAAOC,QAiBeC,SAdtC,SAAkB/D,GACdyB,EAAezB,GACfqB,EAAY,IACZa,EAAS8B,QAAQC,QAW2B/B,WAAUgC,QAR1D,WACIrC,GAAc,IAOiDsC,OAJnE,WACItC,EAAcuC,SAASC,gBAAkBnC,EAAS8B,UAGqBpC,gFCvE/E,IAAA0C,EAAAC,EAAA,IAEeC,gBAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CACFC,OAAQ,OACRC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,YAAa,CACTC,KAAM,GAEVC,oBAAqB,CACjBC,SAAU,WACVC,OAAQV,EAAMW,QAAQ,GACtBC,MAAO,OAEXC,WAAY,CACRH,OAAQ,GAEZI,QAAS,CACLC,aAAcf,EAAMW,QAAQ,8FCMrBK,MAxBf,WAAoB,IAAA7E,EACOC,mBAAS,WAAvB6E,EADO3E,OAAA4E,EAAA,EAAA5E,CAAAH,EAAA,MAqBhB,MAAO,CAAEgF,IAlBGC,sBAAY,SAAAC,GAAO,SAAAxC,IAAA,OAAAA,EAAAvC,OAAAgF,EAAA,EAAAhF,CAAAiF,EAAAxD,EAAAC,KAC3B,SAAAC,IAAA,IAAAuD,EAAAC,EAAA,OAAAF,EAAAxD,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACI4C,GAAW,GACPO,EAAS,KAFjBrD,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAI+BqD,MAAML,GAJrC,cAIcI,EAJdtD,EAAAG,KAAAH,EAAAE,KAAA,EAKuBoD,EAASE,OALhC,OAKQH,EALRrD,EAAAG,KAMQkD,EAASI,KAAKC,MAAML,GAN5BrD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAI,GAAAJ,EAAA,wBAQI8C,GAAW,GAEXa,QAAQC,IAAIV,EAAKG,GAVrBrD,EAAA6D,OAAA,SAWWR,GAXX,yBAAArD,EAAAM,SAAAR,EAAA,mBAD2BS,MAAAC,KAAA3D,WAe3B,OAf2B,kBAAA6D,EAAAH,MAAAC,KAAA3D,WAepBiE,IACR,CAACgC,MCtBKgB,EAAU,mCCkBR3E,IAdf,WAAkB,IACN6D,EAAQH,IAARG,IAEFlC,EAAcmC,sBAAY,SAAAC,GAAG,OAAIF,EAAG,GAAAe,OAAIb,EAAJ,WAAAa,OAAiBD,KAAY,CAACd,IAQxE,MAAO,CAAE5D,kBANiB6D,sBAAY,SAAA7F,GAAI,OAAI0D,EAAW,sDAAAiD,OAAuD3G,KAAS,CAAC0D,IAM9FzB,UAJV4D,sBAAY,SAAA7F,GAC1B,OAAO4F,EAAG,GAAAe,OAAIC,OAAOC,SAASC,SAApB,MAAAH,OAAiCC,OAAOC,SAASE,UAAjDJ,OAA4DC,OAAOC,SAASG,KAAO,IAAMJ,OAAOC,SAASG,KAAO,IAAhHL,OAAqHM,UAArH,qBACX,CAACrB,uICbOsB,EAAA,CACXC,QAAS,CACLC,OAAO,EACPC,QAAS,SAACD,EAAOtD,GAAR,OAAkBA,IAE/BvE,OAAQ,CACJ6H,MAAO,GACPC,QAAS,SAACD,EAAOtD,GAAR,OAAkBA,qBCLpBU,cAAW,SAAAC,GAAK,MAAK,CAChCC,KAAK3D,OAAAuG,EAAA,EAAAvG,CAAA,GACE0D,EAAM8C,WAAWC,MADpB,CAEAtC,SAAU,WACVP,OAAQ,OACRU,MAAO,qCCLAb,cAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CACFW,MAAO,OACPH,SAAU,WACVuC,IAAK,EACLC,UAAW,oBACX9C,QAAS,OACTC,cAAe,UAEnB8C,KAAM,CACFtC,MAAO,WCRTuC,EAAa,GAkCJnH,MAlBf,SAAkBoH,GACd,IAAMnH,EAAUC,IADKC,EAEJC,mBAAS,UAAnBtB,EAFcwB,OAAA4E,EAAA,EAAA5E,CAAAH,EAAA,MAAAK,EAGuBC,qBAHvBC,EAAAJ,OAAA4E,EAAA,EAAA5E,CAAAE,EAAA,GAGd6G,EAHc3G,EAAA,GAGE4G,EAHF5G,EAAA,GAerB,OAVAiB,oBAAU,WACN,GAAKyF,EAAMzG,SAAX,CAKA,IAAM0G,EAzBd,SAAsBvI,EAAQU,GAC1B,IAGI,IAFA,IAAM+H,EAAS,IAAIC,OAAJ,IAAAtB,OAAe1G,GAAQ,OAClC6H,EAAiB,GACZ/H,EAAI,EAAGA,EAAIR,EAAOG,OAAQK,IAAK,CACpC,IAAMC,EAAOT,EAAOQ,GAEpB,GADIC,EAAKC,KAAKiI,MAAMF,IAASF,EAAexH,KAAKN,GAC7C8H,EAAepI,SAAWkI,EAAY,MAE9C,OAAOE,EAAeK,KAAK,SAAC3F,EAAG4F,GAAJ,OAAU5F,EAAEvC,KAAKoI,cAAcD,EAAEnI,QAC9D,MAAAqI,IACF,MAAO,GAcoBC,CAAahJ,EAAOsI,EAAMzG,SAASlB,OAAO,GAAGC,gBAAkB,GAAI0H,EAAMzG,UAChG2G,EAAkBD,EAAepI,OAASoI,OAAiBnI,QALvDoI,KAML,CAACF,EAAMzG,SAAU7B,IAEb,CAAEmB,UAASoH,uDCZPU,EAnBMC,IAAMC,KAAK,SAAAb,GAAS,IAAAc,EACDlI,EAASoH,GAArCnH,EAD6BiI,EAC7BjI,QAASoH,EADoBa,EACpBb,eAEjB,OAAQA,GAAoBD,EAAMe,KAC9BC,EAAArG,EAAAsG,cAACC,EAAA,EAAD,CAAOC,UAAWtI,EAAQgE,MACtBmE,EAAArG,EAAAsG,cAACG,EAAA,EAAD,CAAMD,UAAWtI,EAAQiH,MACpBG,EAAeoB,IAAI,SAAAlJ,GAAI,OACpB6I,EAAArG,EAAAsG,cAACK,EAAA,EAAD,CACIC,IAAKpJ,EAAKyD,GACV4F,QAAS,kBAAMxB,EAAM9D,SAAS/D,IAC9BsJ,QAAM,GACNT,EAAArG,EAAAsG,cAACS,EAAA,EAAD,CAAcC,QAAO,GAAA7C,OAAK3G,EAAKC,KAAV,MAAA0G,OAAmB3G,EAAKyJ,QAAxB,YARA,yBCL9BjF,cAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CACFQ,SAAU,QACVwE,OAAQ,OACRrE,MAAO,QAEXsE,IAAK,CACDC,gBAAiB,QACjBjF,OAAQ,OAEZkF,gBAAiB,CACbD,gBAAiB,WCOVE,EAfIrB,IAAMC,KAAK,SAAAb,GAAS,IAAAjH,EACjBC,mBAAS,WAApBsG,EAD4BpG,OAAA4E,EAAA,EAAA5E,CAAAH,EAAA,MAE7BF,EAAUC,EAAUkH,GAE1B,OACIgB,EAAArG,EAAAsG,cAACiB,EAAA,EAAD,CACIC,QAAS,IACThB,UAAWtI,EAAQgE,KACnBuF,GAAI9C,GACJ0B,EAAArG,EAAAsG,cAACoB,EAAA,EAAD,CACIxJ,QAAS,CAAEgE,KAAMhE,EAAQiJ,IAAKE,gBAAiBnJ,EAAQmJ,sBCsBxDM,EA/BF,SAAAtC,GAAS,IAAAc,EACuElI,cAAjFC,EADUiI,EACVjI,QAASU,EADCuH,EACDvH,SAAUuC,EADTgF,EACShF,SAAUI,EADnB4E,EACmB5E,SAAU7B,EAD7ByG,EAC6BzG,SAAUgC,EADvCyE,EACuCzE,QAASC,EADhDwE,EACgDxE,OAAQvC,EADxD+G,EACwD/G,WAE1E,OACIiH,EAAArG,EAAAsG,cAAA,OAAKE,UAAWtI,EAAQgE,KAAM2E,QAASlF,GACnC0E,EAAArG,EAAAsG,cAACsB,EAAD,MACAvB,EAAArG,EAAAsG,cAAA,OAAKE,UAAWtI,EAAQqE,cAIxB8D,EAAArG,EAAAsG,cAAA,OAAKE,UAAWtI,EAAQuE,qBACpB4D,EAAArG,EAAAsG,cAACuB,EAAD,CACIzB,KAAMhH,EACNmC,SAAUA,EACV3C,SAAUA,IACdyH,EAAArG,EAAAsG,cAACwB,EAAA,EAAD,CACIpG,QAASA,EACThC,SAAUA,EACVqI,WAAS,EACTvB,UAAWtI,EAAQ4E,WACnBxB,MAAO1C,EACPuC,SAAUA,EACV6G,WAAY,CAAE9J,QAAS,CAAE+J,eAAgB/J,EAAQ6E,UACjDmF,YAAY,iBACZvF,OAAO,QACPwF,QAAQ,gBCXbC,EAbH,SAAA/C,GACR,IAAMnH,EAAUC,EAAUkH,GAE1B,OACIgB,EAAArG,EAAAsG,cAAC+B,EAAA,MAAD,CAAO3D,SAAUA,GACb2B,EAAArG,EAAAsG,cAACgC,EAAA,EAAD,MACAjC,EAAArG,EAAAsG,cAAA,OAAKE,UAAWtI,EAAQgE,MACpBmE,EAAArG,EAAAsG,cAACiC,EAAD,SCFVC,EAAcC,QACW,cAA7BrE,OAAOC,SAASE,UAEe,UAA7BH,OAAOC,SAASE,UAEhBH,OAAOC,SAASE,SAASmB,MACvB,2DAsCN,SAASgD,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvE,QACfiE,UAAUC,cAAcQ,YAI1BvF,QAAQC,IACN,iHAKE4E,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlBlF,QAAQC,IAAI,sCAGR4E,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,UAO5BQ,MAAM,SAAAC,GACL3F,QAAQ2F,MAAM,4CAA6CA,KC3FjEC,IAASC,OAAOvD,EAAArG,EAAAsG,cAACuD,EAAD,MAASjI,SAASkI,eAAe,SDiB1C,SAAkBlB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIkB,IAAItF,UAAwBL,OAAOC,SAAS2F,MACpDC,SAAW7F,OAAOC,SAAS4F,OAIvC,OAGF7F,OAAO8F,iBAAiB,OAAQ,WAC9B,IAAMvB,EAAK,GAAAxE,OAAMM,UAAN,sBAEP+D,GAgEV,SAAiCG,EAAOC,GAEtCjF,MAAMgF,GACHK,KAAK,SAAAtF,GAEJ,IAAMyG,EAAczG,EAAS0G,QAAQhH,IAAI,gBAEnB,MAApBM,EAAS2G,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CzB,UAAUC,cAAcyB,MAAMvB,KAAK,SAAAC,GACjCA,EAAauB,aAAaxB,KAAK,WAC7B5E,OAAOC,SAASoG,aAKpB/B,EAAgBC,EAAOC,KAG1Ba,MAAM,WACL1F,QAAQC,IACN,mEArFA0G,CAAwB/B,EAAOC,GAI/BC,UAAUC,cAAcyB,MAAMvB,KAAK,WACjCjF,QAAQC,IACN,gHAMJ0E,EAAgBC,EAAOC,MC3C/BE","file":"static/js/main.99b80a7f.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from \"react\"\r\nimport useAPI from \"hooks/useAPI\"\r\nimport { useStore } from \"eztore\"\r\nimport useStyles from \"./useStyles\"\r\n\r\nconst BATCH = 1000\r\n\r\nfunction iterate(cities, citiesByLetter = {}, pos = 0) {\r\n    return new Promise(resolve => {\r\n        for (let i = 0; i < BATCH; i++) {\r\n            const city = cities[pos + i]\r\n            if (!city) break\r\n\r\n            city.name = city.name.charAt(0).toUpperCase() + city.name.slice(1)\r\n            const letter = city.name.charAt(0)\r\n\r\n            if (!citiesByLetter[letter]) citiesByLetter[letter] = []\r\n\r\n            citiesByLetter[letter].push(city)\r\n        }\r\n\r\n        const nextPos = pos + BATCH\r\n        if (nextPos > cities.length) resolve(citiesByLetter)\r\n        else setImmediate(() => resolve(iterate(cities, citiesByLetter, nextPos)))\r\n    })\r\n}\r\n\r\nfunction useLogic() {\r\n    const classes = useStyles()\r\n    const [, setCities] = useStore(\"cities\")\r\n    const [cityName, setCityName] = useState(\"\")\r\n    const [currentCity, setCurrentCity] = useState()\r\n    const [showDialog, setShowDialog] = useState(false)\r\n    const { getCurrentWeather, getCities } = useAPI()\r\n    const inputRef = useRef()\r\n\r\n    useEffect(() => {\r\n        async function loadCities() {\r\n            const cities = await getCities()\r\n            setCities(await iterate(cities))\r\n        }\r\n\r\n        loadCities()\r\n    }, [setCities, getCities])\r\n\r\n    useEffect(() => {\r\n        async function makeRequest() {\r\n            await getCurrentWeather(currentCity.id)\r\n        }\r\n\r\n        if (currentCity) makeRequest()\r\n    }, [getCurrentWeather, currentCity])\r\n\r\n    function onChange({ target }) {\r\n        setCityName(target.value)\r\n    }\r\n\r\n    function onSelect(city) {\r\n        setCurrentCity(city)\r\n        setCityName(\"\")\r\n        inputRef.current.blur()\r\n    }\r\n\r\n    function onFocus() {\r\n        setShowDialog(true)\r\n    }\r\n\r\n    function onBlur() {\r\n        setShowDialog(document.activeElement === inputRef.current)\r\n    }\r\n\r\n    return { classes, cityName, onChange, onSelect, inputRef, onFocus, onBlur, showDialog }\r\n}\r\n\r\nexport default useLogic","import { makeStyles } from \"@material-ui/core\"\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    weatherInfo: {\r\n        flex: 1,\r\n    },\r\n    citySearchContainer: {\r\n        position: \"relative\",\r\n        margin: theme.spacing(4),\r\n        width: \"30%\",\r\n    },\r\n    citySearch: {\r\n        margin: 0,\r\n    },\r\n    outline: {\r\n        borderRadius: theme.spacing(1.5),\r\n    }\r\n}))","import { useCallback } from \"react\"\r\nimport { useStore } from \"eztore\"\r\n\r\nfunction useFetch() {\r\n    const [, setLoading] = useStore(\"loading\")\r\n\r\n    const get = useCallback(url => {\r\n        async function makeRequest() {\r\n            setLoading(true)\r\n            let result = null\r\n            try {\r\n                const response = await fetch(url)\r\n                result = await response.text()\r\n                result = JSON.parse(result)\r\n            } catch { }\r\n            setLoading(false)\r\n\r\n            console.log(url, result)\r\n            return result\r\n        }\r\n\r\n        return makeRequest()\r\n    }, [setLoading])\r\n\r\n    return { get }\r\n}\r\n\r\nexport default useFetch","export const API_KEY = \"cd0bb97e1e22bf8367b9dfd4f0a05c2f\"","import { useCallback } from \"react\"\r\nimport useFetch from \"./useFetch\"\r\nimport { API_KEY } from \"libraries/constants\"\r\n\r\nfunction useAPI() {\r\n    const { get } = useFetch()\r\n\r\n    const makeRequest = useCallback(url => get(`${url}&appid=${API_KEY}`), [get])\r\n\r\n    const getCurrentWeather = useCallback(city => makeRequest(`https://api.openweathermap.org/data/2.5/weather?id=${city}`), [makeRequest])\r\n\r\n    const getCities = useCallback(city => {\r\n        return get(`${window.location.protocol}//${window.location.hostname}${window.location.port ? \":\" + window.location.port : \"\"}${process.env.PUBLIC_URL}/city.list.json`)\r\n    }, [get])\r\n\r\n    return { getCurrentWeather, getCities }\r\n}\r\n\r\nexport default useAPI","export default {\r\n    loading: {\r\n        state: false,\r\n        reducer: (state, value) => value,\r\n    },\r\n    cities: {\r\n        state: {},\r\n        reducer: (state, value) => value,\r\n    }\r\n}","import { makeStyles } from \"@material-ui/core\"\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        ...theme.typography.body1,\r\n        position: \"absolute\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n    }\r\n}))","import { makeStyles } from \"@material-ui/core\"\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        position: \"absolute\",\r\n        top: 0,\r\n        transform: \"translateY(-100%)\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    list: {\r\n        width: \"100%\",\r\n    }\r\n}))","import { useState, useEffect } from \"react\"\r\nimport useStyles from \"./useStyles\"\r\nimport { useStore } from \"eztore\"\r\n\r\nconst MAX_CITIES = 10\r\n\r\nfunction filterCities(cities, name) {\r\n    try {\r\n        const regExp = new RegExp(`^${name}`, \"img\")\r\n        let filteredCities = []\r\n        for (let i = 0; i < cities.length; i++) {\r\n            const city = cities[i]\r\n            if (city.name.match(regExp)) filteredCities.push(city)\r\n            if (filteredCities.length === MAX_CITIES) break\r\n        }\r\n        return filteredCities.sort((a, b) => a.name.localeCompare(b.name))\r\n    } catch { }\r\n    return []\r\n}\r\n\r\nfunction useLogic(props) {\r\n    const classes = useStyles()\r\n    const [cities] = useStore(\"cities\")\r\n    const [filteredCities, setFilteredCities] = useState()\r\n\r\n    useEffect(() => {\r\n        if (!props.cityName) {\r\n            setFilteredCities()\r\n            return\r\n        }\r\n\r\n        const filteredCities = filterCities(cities[props.cityName.charAt(0).toUpperCase()] || [], props.cityName)\r\n        setFilteredCities(filteredCities.length ? filteredCities : undefined)\r\n    }, [props.cityName, cities])\r\n\r\n    return { classes, filteredCities }\r\n}\r\n\r\nexport default useLogic","import React from \"react\"\r\nimport useLogic from \"./useLogic\"\r\nimport { List, ListItem, ListItemText, Paper } from \"@material-ui/core\"\r\n\r\nconst Autocomplete = React.memo(props => {\r\n    const { classes, filteredCities } = useLogic(props)\r\n\r\n    return !filteredCities  || !props.show ? null : (\r\n        <Paper className={classes.root}>\r\n            <List className={classes.list}>\r\n                {filteredCities.map(city => (\r\n                    <ListItem\r\n                        key={city.id}\r\n                        onClick={() => props.onSelect(city)}\r\n                        button>\r\n                        <ListItemText primary={`${city.name} (${city.country})`} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Paper>\r\n    )\r\n})\r\n\r\nexport default Autocomplete","import { makeStyles } from \"@material-ui/core\"\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        position: \"fixed\",\r\n        zIndex: \"1500\",\r\n        width: \"100%\"\r\n    },\r\n    bar: {\r\n        backgroundColor: \"white\",\r\n        height: \"4px\",\r\n    },\r\n    barColorPrimary: {\r\n        backgroundColor: \"blue\",\r\n    },\r\n}))","import React from \"react\"\r\nimport { Fade, LinearProgress } from \"@material-ui/core\"\r\nimport useStyles from \"./useStyles\"\r\nimport { useStore } from \"eztore\"\r\n\r\nconst LoadingBar = React.memo(props => {\r\n    const [loading] = useStore(\"loading\")\r\n    const classes = useStyles(props)\r\n\r\n    return (\r\n        <Fade\r\n            timeout={500}\r\n            className={classes.root}\r\n            in={loading}>\r\n            <LinearProgress\r\n                classes={{ root: classes.bar, barColorPrimary: classes.barColorPrimary }} />\r\n        </Fade>\r\n    )\r\n})\r\n\r\nexport default LoadingBar","import React from \"react\"\r\nimport useLogic from \"./useLogic\"\r\nimport { TextField } from \"@material-ui/core\"\r\nimport Autocomplete from \"components/Autocomplete\"\r\nimport LoadingBar from \"components/LoadingBar\"\r\n\r\nconst Main = props => {\r\n    const { classes, cityName, onChange, onSelect, inputRef, onFocus, onBlur, showDialog } = useLogic()\r\n\r\n    return (\r\n        <div className={classes.root} onClick={onBlur}>\r\n            <LoadingBar />\r\n            <div className={classes.weatherInfo}>\r\n\r\n            </div>\r\n\r\n            <div className={classes.citySearchContainer}>\r\n                <Autocomplete\r\n                    show={showDialog}\r\n                    onSelect={onSelect}\r\n                    cityName={cityName} />\r\n                <TextField\r\n                    onFocus={onFocus}\r\n                    inputRef={inputRef}\r\n                    fullWidth\r\n                    className={classes.citySearch}\r\n                    value={cityName}\r\n                    onChange={onChange}\r\n                    InputProps={{ classes: { notchedOutline: classes.outline, } }}\r\n                    placeholder=\"search city...\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React from \"react\"\r\nimport { CssBaseline } from \"@material-ui/core\"\r\nimport { Store } from \"eztore\"\r\nimport reducers from \"reducers\"\r\nimport useStyles from \"./useStyles\"\r\nimport Main from \"components/Main\"\r\n\r\nconst App = props => {\r\n    const classes = useStyles(props)\r\n\r\n    return (\r\n        <Store reducers={reducers}>\r\n            <CssBaseline />\r\n            <div className={classes.root}>\r\n                <Main />\r\n            </div>\r\n        </Store>\r\n    )\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"components/App\"\nimport * as serviceWorker from \"serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\nserviceWorker.register()"],"sourceRoot":""}