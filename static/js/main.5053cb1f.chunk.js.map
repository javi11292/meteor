{"version":3,"sources":["hooks/useFetch.js","libraries/constants.js","hooks/useAPI.js","components/Main/useLogic.js","components/Main/useStyles.js","reducers/index.js","components/App/useStyles.js","components/Autocomplete/useStyles.js","components/Autocomplete/useLogic.js","components/Autocomplete/index.js","components/LoadingBar/useStyles.js","components/LoadingBar/index.js","components/CurrentWeather/useStyles.js","components/CurrentWeather/useLogic.js","components/CurrentWeather/index.js","components/Main/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["useFetch","_useStore","useStore","setLoading","Object","slicedToArray","get","useCallback","url","_makeRequest","asyncToGenerator","regenerator_default","a","mark","_callee","result","response","wrap","_context","prev","next","fetch","sent","text","JSON","parse","t0","console","log","abrupt","stop","apply","this","arguments","makeRequest","API_KEY","useAPI","concat","getCurrentWeather","city","getCities","window","location","protocol","hostname","port","process","BATCH","iterate","cities","citiesByLetter","length","undefined","pos","Promise","resolve","i","name","charAt","toUpperCase","slice","letter","push","nextPos","setImmediate","useLogic","classes","useStyles","setCities","C_Users_Everis_Documents_Node_meteor_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","_useState","useState","_useState2","cityName","setCityName","_useState3","_useState4","setCity","_useState5","_useState6","showDialog","setShowDialog","inputRef","useRef","useEffect","_loadCities","C_Users_Everis_Documents_Node_meteor_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_Everis_Documents_Node_meteor_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","t1","loadCities","onChange","_ref","target","value","onSelect","current","blur","onFocus","onBlur","document","activeElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","makeStyles","theme","root","height","display","flexDirection","alignItems","weatherInfo","flex","width","citySearchContainer","position","margin","spacing","citySearch","outline","borderRadius","reducers","loading","state","reducer","objectSpread","typography","body1","top","transform","list","MAX_CITIES","props","filteredCities","setFilteredCities","regExp","RegExp","match","sort","b","localeCompare","_unused","filterCities","Autocomplete","React","memo","_useLogic","show","react_default","createElement","Paper","className","List","map","ListItem","key","id","onClick","button","ListItemText","primary","country","zIndex","bar","backgroundColor","barColorPrimary","LoadingBar","Fade","timeout","in","LinearProgress","CurrentWeather","Main","components_LoadingBar","components_CurrentWeather","components_Autocomplete","TextField","fullWidth","InputProps","notchedOutline","placeholder","variant","App","dist","CssBaseline","components_Main","isLocalhost","Boolean","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","generateClassName","createGenerateClassName","disableGlobal","ReactDOM","render","StylesProvider","components_App","getElementById","URL","href","origin","addEventListener","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5053cb1f.chunk.js","sourcesContent":["import { useCallback } from \"react\"\r\nimport { useStore } from \"eztore\"\r\n\r\nfunction useFetch() {\r\n    const [, setLoading] = useStore(\"loading\")\r\n\r\n    const get = useCallback(url => {\r\n        async function makeRequest() {\r\n            setLoading(true)\r\n            let result = null\r\n            try {\r\n                const response = await fetch(url)\r\n                result = await response.text()\r\n                result = JSON.parse(result)\r\n            } catch { }\r\n            setLoading(false)\r\n\r\n            console.log(url, result)\r\n            return result\r\n        }\r\n\r\n        return makeRequest()\r\n    }, [setLoading])\r\n\r\n    return { get }\r\n}\r\n\r\nexport default useFetch","export const API_KEY = \"cd0bb97e1e22bf8367b9dfd4f0a05c2f\"","import { useCallback } from \"react\"\r\nimport useFetch from \"./useFetch\"\r\nimport { API_KEY } from \"libraries/constants\"\r\n\r\nfunction useAPI() {\r\n    const { get } = useFetch()\r\n\r\n    const makeRequest = useCallback(url => get(`${url}&appid=${API_KEY}`), [get])\r\n\r\n    const getCurrentWeather = useCallback(city => makeRequest(`https://api.openweathermap.org/data/2.5/weather?id=${city}`), [makeRequest])\r\n\r\n    const getCities = useCallback(city => {\r\n        return get(`${window.location.protocol}//${window.location.hostname}${window.location.port ? \":\" + window.location.port : \"\"}${process.env.PUBLIC_URL}/city.list.json`)\r\n    }, [get])\r\n\r\n    return { getCurrentWeather, getCities }\r\n}\r\n\r\nexport default useAPI","import { useState, useEffect, useRef } from \"react\"\r\nimport useAPI from \"hooks/useAPI\"\r\nimport { useStore } from \"eztore\"\r\nimport useStyles from \"./useStyles\"\r\n\r\nconst BATCH = 1000\r\n\r\nfunction iterate(cities, citiesByLetter = {}, pos = 0) {\r\n    return new Promise(resolve => {\r\n        for (let i = 0; i < BATCH; i++) {\r\n            const city = cities[pos + i]\r\n            if (!city) break\r\n\r\n            city.name = city.name.charAt(0).toUpperCase() + city.name.slice(1)\r\n            const letter = city.name.charAt(0)\r\n\r\n            if (!citiesByLetter[letter]) citiesByLetter[letter] = []\r\n\r\n            citiesByLetter[letter].push(city)\r\n        }\r\n\r\n        const nextPos = pos + BATCH\r\n        if (nextPos > cities.length) resolve(citiesByLetter)\r\n        else setImmediate(() => resolve(iterate(cities, citiesByLetter, nextPos)))\r\n    })\r\n}\r\n\r\nfunction useLogic() {\r\n    const classes = useStyles()\r\n    const [, setCities] = useStore(\"cities\")\r\n    const [cityName, setCityName] = useState(\"\")\r\n    const [city, setCity] = useState()\r\n    const [showDialog, setShowDialog] = useState(false)\r\n    const { getCities } = useAPI()\r\n    const inputRef = useRef()\r\n\r\n    useEffect(() => {\r\n        async function loadCities() {\r\n            const cities = await getCities()\r\n            setCities(await iterate(cities))\r\n        }\r\n\r\n        loadCities()\r\n    }, [setCities, getCities])\r\n\r\n    function onChange({ target }) {\r\n        setCityName(target.value)\r\n    }\r\n\r\n    function onSelect(city) {\r\n        setCity(city)\r\n        setCityName(\"\")\r\n        inputRef.current.blur()\r\n    }\r\n\r\n    function onFocus() {\r\n        setShowDialog(true)\r\n    }\r\n\r\n    function onBlur() {\r\n        setShowDialog(document.activeElement === inputRef.current)\r\n    }\r\n\r\n    return { classes, cityName, onChange, onSelect, inputRef, onFocus, onBlur, showDialog, city }\r\n}\r\n\r\nexport default useLogic","import { makeStyles } from \"@material-ui/core\"\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    weatherInfo: {\r\n        flex: 1,\r\n        width: \"100%\",\r\n    },\r\n    citySearchContainer: {\r\n        position: \"relative\",\r\n        margin: theme.spacing(4),\r\n        width: \"30%\",\r\n    },\r\n    citySearch: {\r\n        margin: 0,\r\n    },\r\n    outline: {\r\n        borderRadius: theme.spacing(1.5),\r\n    }\r\n}))","export default {\r\n    loading: {\r\n        state: false,\r\n        reducer: (state, value) => value,\r\n    },\r\n    cities: {\r\n        state: {},\r\n        reducer: (state, value) => value,\r\n    }\r\n}","import { makeStyles } from \"@material-ui/core\"\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        ...theme.typography.body1,\r\n        position: \"absolute\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n    }\r\n}))","import { makeStyles } from \"@material-ui/core\"\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        position: \"absolute\",\r\n        top: 0,\r\n        transform: \"translateY(-100%)\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    list: {\r\n        width: \"100%\",\r\n    }\r\n}))","import { useState, useEffect } from \"react\"\r\nimport useStyles from \"./useStyles\"\r\nimport { useStore } from \"eztore\"\r\n\r\nconst MAX_CITIES = 10\r\n\r\nfunction filterCities(cities, name) {\r\n    try {\r\n        const regExp = new RegExp(`^${name}`, \"img\")\r\n        let filteredCities = []\r\n        for (let i = 0; i < cities.length; i++) {\r\n            const city = cities[i]\r\n            if (city.name.match(regExp)) filteredCities.push(city)\r\n            if (filteredCities.length === MAX_CITIES) break\r\n        }\r\n        return filteredCities.sort((a, b) => a.name.localeCompare(b.name))\r\n    } catch { }\r\n    return []\r\n}\r\n\r\nfunction useLogic(props) {\r\n    const classes = useStyles()\r\n    const [cities] = useStore(\"cities\")\r\n    const [filteredCities, setFilteredCities] = useState()\r\n\r\n    useEffect(() => {\r\n        if (!props.cityName) {\r\n            setFilteredCities()\r\n            return\r\n        }\r\n\r\n        const filteredCities = filterCities(cities[props.cityName.charAt(0).toUpperCase()] || [], props.cityName)\r\n        setFilteredCities(filteredCities.length ? filteredCities : undefined)\r\n    }, [props.cityName, cities])\r\n\r\n    return { classes, filteredCities }\r\n}\r\n\r\nexport default useLogic","import React from \"react\"\r\nimport useLogic from \"./useLogic\"\r\nimport { List, ListItem, ListItemText, Paper } from \"@material-ui/core\"\r\n\r\nconst Autocomplete = React.memo(props => {\r\n    const { classes, filteredCities } = useLogic(props)\r\n\r\n    return !filteredCities  || !props.show ? null : (\r\n        <Paper className={classes.root}>\r\n            <List className={classes.list}>\r\n                {filteredCities.map(city => (\r\n                    <ListItem\r\n                        key={city.id}\r\n                        onClick={() => props.onSelect(city)}\r\n                        button>\r\n                        <ListItemText primary={`${city.name} (${city.country})`} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Paper>\r\n    )\r\n})\r\n\r\nexport default Autocomplete","import { makeStyles } from \"@material-ui/core\"\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        position: \"fixed\",\r\n        zIndex: \"1500\",\r\n        width: \"100%\"\r\n    },\r\n    bar: {\r\n        backgroundColor: \"white\",\r\n        height: \"4px\",\r\n    },\r\n    barColorPrimary: {\r\n        backgroundColor: \"blue\",\r\n    },\r\n}))","import React from \"react\"\r\nimport { Fade, LinearProgress } from \"@material-ui/core\"\r\nimport useStyles from \"./useStyles\"\r\nimport { useStore } from \"eztore\"\r\n\r\nconst LoadingBar = React.memo(props => {\r\n    const [loading] = useStore(\"loading\")\r\n    const classes = useStyles(props)\r\n\r\n    return (\r\n        <Fade\r\n            timeout={500}\r\n            className={classes.root}\r\n            in={loading}>\r\n            <LinearProgress\r\n                classes={{ root: classes.bar, barColorPrimary: classes.barColorPrimary }} />\r\n        </Fade>\r\n    )\r\n})\r\n\r\nexport default LoadingBar","import { makeStyles } from \"@material-ui/core\"\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        height: \"100%\",\r\n    },\r\n}))","import { useEffect } from \"react\"\r\nimport useStyles from \"./useStyles\"\r\nimport useAPI from \"hooks/useAPI\"\r\n\r\nfunction useLogic(props) {\r\n    const classes = useStyles()\r\n    const { getCurrentWeather } = useAPI()\r\n\r\n    useEffect(() => {\r\n        async function makeRequest() {\r\n            await getCurrentWeather(props.city.id)\r\n        }\r\n\r\n        if (props.city) makeRequest()\r\n    }, [getCurrentWeather, props.city])\r\n\r\n    return { classes }\r\n}\r\n\r\nexport default useLogic","import React from \"react\"\r\nimport useLogic from \"./useLogic\"\r\n\r\nconst CurrentWeather = React.memo(props => {\r\n    const { classes } = useLogic(props)\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            \r\n        </div>\r\n    )\r\n})\r\n\r\nexport default CurrentWeather","import React from \"react\"\r\nimport useLogic from \"./useLogic\"\r\nimport { TextField } from \"@material-ui/core\"\r\nimport Autocomplete from \"components/Autocomplete\"\r\nimport LoadingBar from \"components/LoadingBar\"\r\nimport CurrentWeather from \"components/CurrentWeather\"\r\n\r\nconst Main = props => {\r\n    const { classes, cityName, onChange, onSelect, inputRef, onFocus, onBlur, showDialog } = useLogic()\r\n\r\n    return (\r\n        <div className={classes.root} onClick={onBlur}>\r\n            <LoadingBar />\r\n            <div className={classes.weatherInfo}>\r\n                <CurrentWeather />\r\n            </div>\r\n\r\n            <div className={classes.citySearchContainer}>\r\n                <Autocomplete\r\n                    show={showDialog}\r\n                    onSelect={onSelect}\r\n                    cityName={cityName} />\r\n                <TextField\r\n                    onFocus={onFocus}\r\n                    inputRef={inputRef}\r\n                    fullWidth\r\n                    className={classes.citySearch}\r\n                    value={cityName}\r\n                    onChange={onChange}\r\n                    InputProps={{ classes: { notchedOutline: classes.outline } }}\r\n                    placeholder=\"search city...\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React from \"react\"\r\nimport { CssBaseline } from \"@material-ui/core\"\r\nimport { Store } from \"eztore\"\r\nimport reducers from \"reducers\"\r\nimport useStyles from \"./useStyles\"\r\nimport Main from \"components/Main\"\r\n\r\nconst App = props => {\r\n    const classes = useStyles(props)\r\n\r\n    return (\r\n        <Store reducers={reducers}>\r\n            <CssBaseline />\r\n            <div className={classes.root}>\r\n                <Main />\r\n            </div>\r\n        </Store>\r\n    )\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"components/App\"\nimport * as serviceWorker from \"serviceWorker\"\nimport { StylesProvider, createGenerateClassName } from \"@material-ui/styles\"\n\nconst generateClassName = createGenerateClassName({ disableGlobal: true })\n\nReactDOM.render(<StylesProvider generateClassName={generateClassName}><App /></StylesProvider>, document.getElementById(\"root\"))\n\nserviceWorker.register()"],"sourceRoot":""}