{"version":3,"sources":["hooks/useFetch.js","libraries/constants.js","hooks/useAPI.js","components/Main/useLogic.js","components/Main/useStyles.js","reducers/index.js","components/Autocomplete/useStyles.js","components/Autocomplete/useLogic.js","components/Autocomplete/index.js","components/LoadingBar/useStyles.js","components/LoadingBar/index.js","components/CurrentWeather/useStyles.js","components/CurrentWeather/useLogic.js","components/CurrentWeather/index.js","components/ForecastWeather/useStyles.js","components/ForecastWeather/useLogic.js","components/WeekDayWeather/useStyles.js","components/WeekDayWeather/index.js","components/ForecastWeather/index.js","components/Fade/useStyles.js","components/Fade/index.js","components/Main/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["useFetch","_useStore","useStore","setLoading","Object","slicedToArray","get","useCallback","url","_makeRequest","asyncToGenerator","regenerator_default","a","mark","_callee","result","response","wrap","_context","prev","next","fetch","sent","text","JSON","parse","t0","console","log","abrupt","stop","apply","this","arguments","makeRequest","API_KEY","useAPI","concat","getCurrentWeather","city","getForecastWeather","getCities","window","location","protocol","hostname","port","process","BATCH","iterate","cities","citiesByLetter","length","undefined","pos","Promise","resolve","i","name","charAt","toUpperCase","slice","letter","id","nextPos","setImmediate","useLogic","classes","useStyles","_useStore2","C_Users_Everis_Documents_Node_meteor_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","setCities","_useState","useState","_useState2","cityName","setCityName","_useState3","_useState4","setCity","_useState5","_useState6","showDialog","setShowDialog","inputRef","useRef","useEffect","_loadCities","C_Users_Everis_Documents_Node_meteor_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_Everis_Documents_Node_meteor_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","t1","loadCities","M","onChange","_ref","target","value","onSelect","current","blur","onFocus","onBlur","document","activeElement","makeStyles","theme","root","C_Users_Everis_Documents_Node_meteor_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","typography","body1","position","width","height","display","flexDirection","alignItems","background","backgroundImage","backgroundSize","filter","spacing","weatherInfoContainer","flex","alignSelf","marginLeft","marginRight","marginTop","borderRadius","overflow","weatherInfo","citySearchContainer","margin","citySearch","outline","borderColor","palette","primary","dark","&:hover","borderCololor","light","reducers","loading","state","reducer","top","transform","list","MAX_CITIES","props","filteredCities","setFilteredCities","regExp","RegExp","cityId","match","push","sort","b","localeCompare","_unused","filterCities","Autocomplete","React","memo","_useLogic","show","react_default","createElement","Paper","className","List","map","ListItem","key","onClick","button","ListItemText","country","zIndex","bar","backgroundColor","barColorPrimary","LoadingBar","Fade","timeout","in","LinearProgress","fontSize","fontWeight","time","CurrentWeather","moment","format","day","symbol","Symbol","WEATHER_KEYS","CLEAR","CLOUDY","RAINY","UNKNOW","setMondayFirst","minusOne","getKey","info","weather","toString","startsWith","setWeather","Array","reduce","acc","data","dt","objectSpread","defineProperty","getBackground","opacity","content","padding","boxShadow","getBorder","justifyContent","iconContainer","icon","grow","animation","shake","@keyframes grow","50%","100%","@keyframes shake","from","to","getAnimation","delays","currentDelay","getDelay","delay","WeekDayWeather","Fragment","style","animationDelay","classnames","src","alt","main","temp","Math","round","DAYS","ForecastWeather","index","components_WeekDayWeather","enter","active","transition","exit","container","TransitionGroup","appear","CSSTransition","classNames","appearActive","enterActive","transitionKey","children","Main","components_LoadingBar","components_Fade","components_CurrentWeather","components_ForecastWeather","components_Autocomplete","TextField","fullWidth","InputProps","notchedOutline","placeholder","variant","createMuiTheme","type","default","App","dist","MuiThemeProvider","CssBaseline","components_Main","isLocalhost","Boolean","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","getElementById","URL","href","origin","addEventListener","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5804705c.chunk.js","sourcesContent":["import { useCallback } from \"react\"\r\nimport { useStore } from \"eztore\"\r\n\r\nfunction useFetch() {\r\n    const [, setLoading] = useStore(\"loading\")\r\n\r\n    const get = useCallback(url => {\r\n        async function makeRequest() {\r\n            setLoading(true)\r\n            let result = null\r\n            try {\r\n                const response = await fetch(url)\r\n                result = await response.text()\r\n                result = JSON.parse(result)\r\n            } catch { }\r\n            setLoading(false)\r\n\r\n            console.log(url, result)\r\n            return result\r\n        }\r\n\r\n        return makeRequest()\r\n    }, [setLoading])\r\n\r\n    return { get }\r\n}\r\n\r\nexport default useFetch","export const API_KEY = \"cd0bb97e1e22bf8367b9dfd4f0a05c2f\"","import { useCallback } from \"react\"\r\nimport useFetch from \"./useFetch\"\r\nimport { API_KEY } from \"libraries/constants\"\r\n\r\nfunction useAPI() {\r\n    const { get } = useFetch()\r\n\r\n    const makeRequest = useCallback(url => get(`${url}&appid=${API_KEY}`), [get])\r\n\r\n    const getCurrentWeather = useCallback(city => makeRequest(`https://api.openweathermap.org/data/2.5/weather?id=${city}`), [makeRequest])\r\n\r\n    const getForecastWeather = useCallback(city => makeRequest(`https://api.openweathermap.org/data/2.5/forecast?id=${city}`), [makeRequest])\r\n\r\n    const getCities = useCallback(city => {\r\n        return get(`${window.location.protocol}//${window.location.hostname}${window.location.port ? \":\" + window.location.port : \"\"}${process.env.PUBLIC_URL}/city.list.json`)\r\n    }, [get])\r\n\r\n    return { getCurrentWeather, getCities, getForecastWeather }\r\n}\r\n\r\nexport default useAPI","import { useState, useEffect, useRef } from \"react\"\r\nimport useAPI from \"hooks/useAPI\"\r\nimport { useStore } from \"eztore\"\r\n\r\nimport useStyles from \"./useStyles\"\r\n\r\nconst BATCH = 1000\r\n\r\nfunction iterate(cities, citiesByLetter = {}, pos = 0) {\r\n    return new Promise(resolve => {\r\n        for (let i = 0; i < BATCH; i++) {\r\n            const city = cities[pos + i]\r\n            if (!city) break\r\n\r\n            city.name = city.name.charAt(0).toUpperCase() + city.name.slice(1)\r\n            const letter = city.name.charAt(0)\r\n\r\n            if (!citiesByLetter[letter]) citiesByLetter[letter] = {}\r\n\r\n            citiesByLetter[letter][city.id] = city\r\n        }\r\n\r\n        const nextPos = pos + BATCH\r\n        if (nextPos > cities.length) resolve(citiesByLetter)\r\n        else setImmediate(() => resolve(iterate(cities, citiesByLetter, nextPos)))\r\n    })\r\n}\r\n\r\nfunction useLogic() {\r\n    const classes = useStyles()\r\n    const [cities, setCities] = useStore(\"cities\")\r\n    const [cityName, setCityName] = useState(\"\")\r\n    const [city, setCity] = useState()\r\n    const [showDialog, setShowDialog] = useState(false)\r\n    const { getCities } = useAPI()\r\n    const inputRef = useRef()\r\n\r\n    useEffect(() => {\r\n        async function loadCities() {\r\n            const cities = await getCities()\r\n            setCities(await iterate(cities))\r\n        }\r\n\r\n        loadCities()\r\n    }, [setCities, getCities])\r\n\r\n    useEffect(() => {\r\n        if (cities.M) setCity(cities.M[6359304])\r\n        else setCity()\r\n    }, [cities])\r\n\r\n    function onChange({ target }) {\r\n        setCityName(target.value)\r\n    }\r\n\r\n    function onSelect(city) {\r\n        setCity(city)\r\n        setCityName(\"\")\r\n        inputRef.current.blur()\r\n    }\r\n\r\n    function onFocus() {\r\n        setShowDialog(true)\r\n    }\r\n\r\n    function onBlur() {\r\n        setShowDialog(document.activeElement === inputRef.current)\r\n    }\r\n\r\n    return { classes, cityName, onChange, onSelect, inputRef, onFocus, onBlur, showDialog, city }\r\n}\r\n\r\nexport default useLogic","import { makeStyles } from \"@material-ui/core\"\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        ...theme.typography.body1,\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    background: {\r\n        backgroundImage: `url(${process.env.PUBLIC_URL}/images/city0.png)`,\r\n        backgroundSize: \"cover\",\r\n    },\r\n    filter: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        filter: `blur(${theme.spacing(3)}px)`\r\n    },\r\n    weatherInfoContainer: {\r\n        flex: 1,\r\n        alignSelf: \"stretch\",\r\n        marginLeft: theme.spacing(5),\r\n        marginRight: theme.spacing(5),\r\n        marginTop: theme.spacing(5),\r\n        borderRadius: theme.spacing(1),\r\n        overflow: \"hidden\",\r\n    },\r\n    weatherInfo: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    citySearchContainer: {\r\n        position: \"relative\",\r\n        margin: theme.spacing(4),\r\n        width: \"30%\",\r\n    },\r\n    citySearch: {\r\n        margin: 0,\r\n    },\r\n    outline: {\r\n        borderRadius: theme.spacing(1.5),\r\n        borderColor: theme.palette.primary.dark,\r\n        \"&:hover\": {\r\n            borderCololor: theme.palette.primary.light,\r\n        }\r\n    }\r\n}))","export default {\r\n    loading: {\r\n        state: false,\r\n        reducer: (state, value) => value,\r\n    },\r\n    cities: {\r\n        state: {},\r\n        reducer: (state, value) => value,\r\n    }\r\n}","import { makeStyles } from \"@material-ui/core\"\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        position: \"absolute\",\r\n        top: 0,\r\n        transform: \"translateY(-100%)\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    list: {\r\n        width: \"100%\",\r\n    }\r\n}))","import { useState, useEffect } from \"react\"\r\nimport { useStore } from \"eztore\"\r\n\r\nimport useStyles from \"./useStyles\"\r\n\r\nconst MAX_CITIES = 10\r\n\r\nfunction filterCities(cities, name) {\r\n    try {\r\n        const regExp = new RegExp(`^${name}`, \"img\")\r\n        let filteredCities = []\r\n        for (const cityId in cities) {\r\n            const city = cities[cityId]\r\n            if (city.name.match(regExp)) filteredCities.push(city)\r\n            if (filteredCities.length === MAX_CITIES) break\r\n        }\r\n        return filteredCities.sort((a, b) => a.name.localeCompare(b.name))\r\n    } catch { }\r\n    return []\r\n}\r\n\r\nfunction useLogic(props) {\r\n    const classes = useStyles()\r\n    const [cities] = useStore(\"cities\")\r\n    const [filteredCities, setFilteredCities] = useState()\r\n\r\n    useEffect(() => {\r\n        if (!props.cityName) {\r\n            setFilteredCities()\r\n            return\r\n        }\r\n\r\n        const filteredCities = filterCities(cities[props.cityName.charAt(0).toUpperCase()] || [], props.cityName)\r\n        setFilteredCities(filteredCities.length ? filteredCities : undefined)\r\n    }, [props.cityName, cities])\r\n\r\n    return { classes, filteredCities }\r\n}\r\n\r\nexport default useLogic","import React from \"react\"\r\nimport { List, ListItem, ListItemText, Paper } from \"@material-ui/core\"\r\n\r\nimport useLogic from \"./useLogic\"\r\n\r\n\r\nconst Autocomplete = React.memo(props => {\r\n    const { classes, filteredCities } = useLogic(props)\r\n\r\n    return !filteredCities  || !props.show ? null : (\r\n        <Paper className={classes.root}>\r\n            <List className={classes.list}>\r\n                {filteredCities.map(city => (\r\n                    <ListItem\r\n                        key={city.id}\r\n                        onClick={() => props.onSelect(city)}\r\n                        button>\r\n                        <ListItemText primary={`${city.name} (${city.country})`} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Paper>\r\n    )\r\n})\r\n\r\nexport default Autocomplete","import { makeStyles } from \"@material-ui/core\"\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        position: \"fixed\",\r\n        zIndex: \"1500\",\r\n        width: \"100%\"\r\n    },\r\n    bar: {\r\n        backgroundColor: \"white\",\r\n        height: \"4px\",\r\n    },\r\n    barColorPrimary: {\r\n        backgroundColor: \"blue\",\r\n    },\r\n}))","import React from \"react\"\r\nimport { Fade, LinearProgress } from \"@material-ui/core\"\r\nimport { useStore } from \"eztore\"\r\n\r\nimport useStyles from \"./useStyles\"\r\n\r\nconst LoadingBar = React.memo(props => {\r\n    const [loading] = useStore(\"loading\")\r\n    const classes = useStyles(props)\r\n\r\n    return (\r\n        <Fade\r\n            timeout={500}\r\n            className={classes.root}\r\n            in={loading}>\r\n            <LinearProgress\r\n                classes={{ root: classes.bar, barColorPrimary: classes.barColorPrimary }} />\r\n        </Fade>\r\n    )\r\n})\r\n\r\nexport default LoadingBar","import { makeStyles } from \"@material-ui/core\"\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        flex: 1,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        backgroundImage: `url(${process.env.PUBLIC_URL}/images/city0.png)`,\r\n        backgroundSize: \"cover\",\r\n    },\r\n    city: {\r\n        fontSize: \"2.5rem\",\r\n        fontWeight: 300,\r\n    },\r\n    time: {\r\n        fontSize: \"1.3rem\",\r\n        fontWeight: 100,\r\n    }\r\n}))","import { useEffect } from \"react\"\r\nimport useAPI from \"hooks/useAPI\"\r\n\r\nimport useStyles from \"./useStyles\"\r\n\r\nfunction useLogic(props) {\r\n    const classes = useStyles()\r\n    const { getCurrentWeather } = useAPI()\r\n\r\n    useEffect(() => {\r\n        async function makeRequest() {\r\n            await getCurrentWeather(props.city.id)\r\n        }\r\n\r\n        makeRequest()\r\n    }, [getCurrentWeather, props.city])\r\n\r\n    return { classes }\r\n}\r\n\r\nexport default useLogic","import React from \"react\"\r\nimport moment from \"moment\"\r\n\r\nimport useLogic from \"./useLogic\"\r\n\r\nconst CurrentWeather = React.memo(props => {\r\n    const { classes } = useLogic(props)\r\n    const { city } = props\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.city}>{city.name}</div>\r\n            <div className={classes.time}>{moment().format(\"dddd, MMMM D, HH:mm\")}</div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default CurrentWeather","import { makeStyles } from \"@material-ui/core\"\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    day: {\r\n        flex: 1,\r\n    }\r\n}))","import { useState, useEffect } from \"react\"\r\nimport useAPI from \"hooks/useAPI\"\r\nimport moment from \"moment\"\r\n\r\nimport useStyles from \"./useStyles\"\r\n\r\nexport const symbol = Symbol(\"weather key\")\r\n\r\nexport const WEATHER_KEYS = {\r\n    CLEAR: \"clear\",\r\n    CLOUDY: \"cloudy\",\r\n    RAINY: \"rainy\",\r\n    UNKNOW: \"unknow\",\r\n}\r\n\r\nfunction setMondayFirst(day) {\r\n    const minusOne = day - 1\r\n    return minusOne < 0 ? 6 : minusOne\r\n}\r\n\r\nfunction getKey(info) {\r\n    try {\r\n        const id = info.weather[0].id.toString()\r\n\r\n        if (id === \"800\") {\r\n            return WEATHER_KEYS.CLEAR\r\n        }\r\n\r\n        if (id.startsWith(\"80\")) {\r\n            return WEATHER_KEYS.CLOUDY\r\n        }\r\n\r\n        if (id.startsWith(\"5\")) {\r\n            return WEATHER_KEYS.RAINY\r\n        }\r\n    } catch { }\r\n    return WEATHER_KEYS.UNKNOW\r\n}\r\n\r\nfunction useLogic(props) {\r\n    const classes = useStyles()\r\n    const [weather, setWeather] = useState()\r\n    const { getForecastWeather } = useAPI()\r\n\r\n    useEffect(() => {\r\n        async function makeRequest() {\r\n            const weather = await getForecastWeather(props.city.id)\r\n            if (weather && weather.list && weather.list instanceof Array) {\r\n                setWeather(weather.list.reduce((acc, data) => {\r\n                    const day = setMondayFirst(moment(data.dt * 1000).day())\r\n\r\n                    return {\r\n                        ...acc,\r\n                        [day]: { ...data, [symbol]: getKey(data) },\r\n                    }\r\n                }, {}))\r\n            }\r\n        }\r\n\r\n        makeRequest()\r\n    }, [getForecastWeather, props.city])\r\n\r\n    return { classes, weather }\r\n}\r\n\r\nexport default useLogic","import { makeStyles } from \"@material-ui/core\"\r\nimport { symbol, WEATHER_KEYS } from \"components/ForecastWeather/useLogic\"\r\n\r\nfunction getBackground(info) {\r\n    if (!info) return \"rgb(0,0,0)\"\r\n    switch (info[symbol]) {\r\n        case WEATHER_KEYS.CLEAR:\r\n            return \"rgb(200,100,100)\"\r\n        case WEATHER_KEYS.CLOUDY:\r\n            return \"rgb(150,150,150)\"\r\n        case WEATHER_KEYS.RAINY:\r\n            return \"rgb(0,100,200)\"\r\n        default:\r\n            return \"rgb(0,0,0)\"\r\n    }\r\n}\r\n\r\nfunction getBorder(info) {\r\n    if (!info) return \"rgb(255,255,255)\"\r\n    switch (info[symbol]) {\r\n        case WEATHER_KEYS.CLEAR:\r\n            return \"rgb(250,250,0)\"\r\n        case WEATHER_KEYS.CLOUDY:\r\n            return \"rgb(180,180,180)\"\r\n        case WEATHER_KEYS.RAINY:\r\n            return \"rgb(0,150,250)\"\r\n        default:\r\n            return \"rgb(255,255,255)\"\r\n    }\r\n}\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        flex: 1,\r\n        position: \"relative\",\r\n    },\r\n    background: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        background: props => getBackground(props.info),\r\n        opacity: 0.35,\r\n    },\r\n    content: {\r\n        fontSize: \"1.2rem\",\r\n        fontWeight: 300,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        position: \"relative\",\r\n        padding: theme.spacing(3),\r\n        boxShadow: props => `1px 0 0 0 black, 0 -5px 0 0 ${getBorder(props.info)}`,\r\n    },\r\n    info: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flex: 1,\r\n    },\r\n    iconContainer: {\r\n        background: \"rgba(0,0,0,0.2)\",\r\n        margin: theme.spacing(2),\r\n        borderRadius: \"50%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    icon: {\r\n        height: theme.spacing(8),\r\n    },\r\n    grow: {\r\n        animation: \"$grow 1.5s linear infinite\",\r\n    },\r\n    shake: {\r\n        animation: \"$shake 1.5s linear infinite\",\r\n    },\r\n    \"@keyframes grow\": {\r\n        \"50%\": { transform: \"scale(1.1)\" },\r\n        \"100%\": { transform: \"scale(1)\" },\r\n    },\r\n    \"@keyframes shake\": {\r\n        \"from\": { transform: `rotate(0deg) translateX(${theme.spacing(0.2)}px) rotate(0deg)` },\r\n        \"to\": { transform: `rotate(360deg) translateX(${theme.spacing(0.2)}px) rotate(-360deg)` },\r\n    },\r\n}))","import React from \"react\"\r\nimport classnames from \"classnames\"\r\n\r\nimport { symbol, WEATHER_KEYS } from \"components/ForecastWeather/useLogic\"\r\n\r\nimport useStyles from \"./useStyles\"\r\n\r\nfunction getAnimation(info, classes) {\r\n    switch (info[symbol]) {\r\n        case WEATHER_KEYS.CLEAR:\r\n            return classes.grow\r\n        case WEATHER_KEYS.CLOUDY:\r\n        case WEATHER_KEYS.RAINY:\r\n            return classes.shake\r\n        default:\r\n            return\r\n    }\r\n}\r\n\r\nconst delays = [0, 200, 100, 400, 300, 600, 500]\r\nlet currentDelay = 0\r\nfunction getDelay() {\r\n    const delay = delays[currentDelay]\r\n    currentDelay = (currentDelay + 1) % 6\r\n    return delay + \"ms\"\r\n}\r\n\r\nconst WeekDayWeather = React.memo(props => {\r\n    const classes = useStyles(props)\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.background} />\r\n            <div className={classes.content}>\r\n                <div>{props.day}</div>\r\n                <div className={classes.info}>\r\n                    {!props.info ? \"No data\" :\r\n                        <React.Fragment>\r\n                            <div className={classes.iconContainer}>\r\n                                <img\r\n                                    style={{ animationDelay: getDelay() }}\r\n                                    className={classnames(classes.icon, getAnimation(props.info, classes))}\r\n                                    src={`http://openweathermap.org/img/wn/${props.info.weather[0].icon.slice(0, -1)}d@2x.png`}\r\n                                    alt=\"\" />\r\n                            </div>\r\n                            <div>{props.info.main.temp < 273 ? \"-\" : \"+\"}{Math.round((props.info.main.temp - 273))}º</div>\r\n                        </React.Fragment>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default WeekDayWeather","import React from \"react\"\r\nimport WeekDayWeather from \"components/WeekDayWeather\"\r\n\r\nimport useLogic from \"./useLogic\"\r\n\r\nconst DAYS = [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\"]\r\n\r\nconst ForecastWeather = React.memo(props => {\r\n    const { classes, weather } = useLogic(props)\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {weather && DAYS.map((day, index) => (\r\n                <WeekDayWeather\r\n                    info={weather[index]}\r\n                    key={day}\r\n                    day={day} />\r\n            ))}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ForecastWeather","import { makeStyles } from \"@material-ui/core\"\r\n\r\nexport const TIMEOUT = 1000\r\n\r\nexport default makeStyles(theme => ({\r\n    enter: {\r\n        opacity: \"0\",\r\n        zIndex: \"1\",\r\n    },\r\n    active: {\r\n        opacity: \"1\",\r\n        transition: `opacity ${TIMEOUT}ms`\r\n    },\r\n    exit: {\r\n        opacity: \"0\",\r\n        transition: `opacity ${TIMEOUT}ms`\r\n    },\r\n    container: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"auto\",\r\n    },\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        position: \"relative\",\r\n    }\r\n}))","import React from \"react\"\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\"\r\nimport classnames from \"classnames\"\r\n\r\nimport useStyles, { TIMEOUT } from \"./useStyles\"\r\n\r\nconst Fade = React.memo(props => {\r\n    const classes = useStyles(props)\r\n\r\n    return (\r\n        <TransitionGroup\r\n            className={classes.root}\r\n            appear>\r\n            <CSSTransition\r\n                classNames={{\r\n                    appear: classes.enter,\r\n                    appearActive: classes.active,\r\n                    enter: classes.enter,\r\n                    enterActive: classes.active,\r\n                    exit: classes.exit,\r\n                }}\r\n                timeout={TIMEOUT}\r\n                key={props.transitionKey}>\r\n                <div className={classnames(classes.container, props.className)}>\r\n                    {props.children}\r\n                </div>\r\n            </CSSTransition>\r\n        </TransitionGroup>\r\n    )\r\n})\r\n\r\nexport default Fade","import React from \"react\"\r\nimport { TextField } from \"@material-ui/core\"\r\nimport Autocomplete from \"components/Autocomplete\"\r\nimport LoadingBar from \"components/LoadingBar\"\r\nimport CurrentWeather from \"components/CurrentWeather\"\r\nimport ForecastWeather from \"components/ForecastWeather\"\r\nimport Fade from \"components/Fade\"\r\nimport classnames from \"classnames\"\r\n\r\nimport useLogic from \"./useLogic\"\r\n\r\nconst Main = props => {\r\n    const { classes, cityName, onChange, onSelect, inputRef, onFocus, onBlur, showDialog, city } = useLogic()\r\n\r\n    return (\r\n        <div className={classes.root} onClick={onBlur}>\r\n            <div className={classnames(classes.background, classes.filter)} />\r\n            <LoadingBar />\r\n\r\n            <div className={classes.weatherInfoContainer}>\r\n                {city &&\r\n                    <Fade\r\n                        className={classes.weatherInfo}\r\n                        transitionKey={city.id}>\r\n                        <CurrentWeather city={city} />\r\n                        <ForecastWeather city={city} />\r\n                    </Fade>\r\n                }\r\n            </div>\r\n\r\n            <div className={classes.citySearchContainer}>\r\n                <Autocomplete\r\n                    show={showDialog}\r\n                    onSelect={onSelect}\r\n                    cityName={cityName} />\r\n                <TextField\r\n                    onFocus={onFocus}\r\n                    inputRef={inputRef}\r\n                    fullWidth\r\n                    className={classes.citySearch}\r\n                    value={cityName}\r\n                    onChange={onChange}\r\n                    InputProps={{ classes: { notchedOutline: classes.outline } }}\r\n                    placeholder=\"search city...\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React from \"react\"\r\nimport { CssBaseline, MuiThemeProvider, createMuiTheme } from \"@material-ui/core\"\r\nimport { Store } from \"eztore\"\r\nimport reducers from \"reducers\"\r\nimport Main from \"components/Main\"\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: {\r\n            main: \"rgb(220,220,220)\"\r\n        },\r\n        background: {\r\n            default: \"rgb(10,10,10)\"\r\n        }\r\n    }\r\n})\r\n\r\nconst App = props => {\r\n    return (\r\n        <Store reducers={reducers}>\r\n            <MuiThemeProvider theme={theme}>\r\n                <CssBaseline />\r\n                <div>\r\n                    <Main />\r\n                </div>\r\n            </MuiThemeProvider>\r\n        </Store>\r\n    )\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"components/App\"\nimport * as serviceWorker from \"serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\nserviceWorker.register()"],"sourceRoot":""}