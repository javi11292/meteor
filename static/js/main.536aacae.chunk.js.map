{"version":3,"sources":["reducers/index.js","components/Autocomplete/useStyles.js","components/Autocomplete/useLogic.js","components/Autocomplete/index.js","components/LoadingBar/useStyles.js","components/LoadingBar/index.js","components/CurrentWeather/useStyles.js","components/CurrentWeather/useLogic.js","components/CurrentWeather/index.js","components/Main/index.js","components/App/index.js","serviceWorker.js","index.js","hooks/useFetch.js","libraries/constants.js","hooks/useAPI.js","components/Main/useLogic.js","components/Main/useStyles.js"],"names":["reducers","loading","state","reducer","value","cities","makeStyles","theme","root","width","position","top","transform","display","flexDirection","list","MAX_CITIES","useLogic","props","classes","useStyles","_useStore","useStore","Object","slicedToArray","_useState","useState","_useState2","filteredCities","setFilteredCities","useEffect","cityName","name","regExp","RegExp","concat","i","length","city","match","push","sort","a","b","localeCompare","_unused","filterCities","charAt","toUpperCase","undefined","Autocomplete","React","memo","_useLogic","show","react_default","createElement","Paper","className","List","map","ListItem","key","id","onClick","onSelect","button","ListItemText","primary","country","zIndex","bar","backgroundColor","height","barColorPrimary","LoadingBar","Fade","timeout","in","LinearProgress","getCurrentWeather","useAPI","_makeRequest","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","apply","this","arguments","makeRequest","CurrentWeather","Main","onChange","inputRef","onFocus","onBlur","showDialog","components_LoadingBar","weatherInfo","components_CurrentWeather","citySearchContainer","components_Autocomplete","TextField","fullWidth","citySearch","InputProps","notchedOutline","outline","placeholder","margin","variant","createMuiTheme","jss","create","objectSpread","jssPreset","insertionPoint","document","head","lastChild","App","dist","StylesProvider","ThemeProvider","CssBaseline","components_Main","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","useFetch","setLoading","useCallback","url","result","sent","text","JSON","parse","t0","abrupt","API_KEY","getCities","protocol","port","BATCH","iterate","citiesByLetter","pos","Promise","resolve","slice","letter","nextPos","setImmediate","setCities","C_Users_Everis_Documents_Node_meteor_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","setCityName","_useState3","_useState4","setCity","_useState5","_useState6","setShowDialog","useRef","_loadCities","C_Users_Everis_Documents_Node_meteor_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_Everis_Documents_Node_meteor_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","t1","loadCities","_ref","target","current","blur","activeElement","C_Users_Everis_Documents_Node_meteor_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","typography","body1","alignItems","flex","spacing","borderRadius"],"mappings":"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","file":"static/js/main.536aacae.chunk.js","sourcesContent":["export default {\r\n    loading: {\r\n        state: false,\r\n        reducer: (state, value) => value,\r\n    },\r\n    cities: {\r\n        state: {},\r\n        reducer: (state, value) => value,\r\n    }\r\n}","import { makeStyles } from \"@material-ui/styles\"\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        position: \"absolute\",\r\n        top: 0,\r\n        transform: \"translateY(-100%)\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    list: {\r\n        width: \"100%\",\r\n    }\r\n}))","import { useState, useEffect } from \"react\"\r\nimport useStyles from \"./useStyles\"\r\nimport { useStore } from \"eztore\"\r\n\r\nconst MAX_CITIES = 10\r\n\r\nfunction filterCities(cities, name) {\r\n    try {\r\n        const regExp = new RegExp(`^${name}`, \"img\")\r\n        let filteredCities = []\r\n        for (let i = 0; i < cities.length; i++) {\r\n            const city = cities[i]\r\n            if (city.name.match(regExp)) filteredCities.push(city)\r\n            if (filteredCities.length === MAX_CITIES) break\r\n        }\r\n        return filteredCities.sort((a, b) => a.name.localeCompare(b.name))\r\n    } catch { }\r\n    return []\r\n}\r\n\r\nfunction useLogic(props) {\r\n    const classes = useStyles()\r\n    const [cities] = useStore(\"cities\")\r\n    const [filteredCities, setFilteredCities] = useState()\r\n\r\n    useEffect(() => {\r\n        if (!props.cityName) {\r\n            setFilteredCities()\r\n            return\r\n        }\r\n\r\n        const filteredCities = filterCities(cities[props.cityName.charAt(0).toUpperCase()] || [], props.cityName)\r\n        setFilteredCities(filteredCities.length ? filteredCities : undefined)\r\n    }, [props.cityName, cities])\r\n\r\n    return { classes, filteredCities }\r\n}\r\n\r\nexport default useLogic","import React from \"react\"\r\nimport useLogic from \"./useLogic\"\r\nimport { List, ListItem, ListItemText, Paper } from \"@material-ui/core\"\r\n\r\nconst Autocomplete = React.memo(props => {\r\n    const { classes, filteredCities } = useLogic(props)\r\n\r\n    return !filteredCities  || !props.show ? null : (\r\n        <Paper className={classes.root}>\r\n            <List className={classes.list}>\r\n                {filteredCities.map(city => (\r\n                    <ListItem\r\n                        key={city.id}\r\n                        onClick={() => props.onSelect(city)}\r\n                        button>\r\n                        <ListItemText primary={`${city.name} (${city.country})`} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Paper>\r\n    )\r\n})\r\n\r\nexport default Autocomplete","import { makeStyles } from \"@material-ui/styles\"\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        position: \"fixed\",\r\n        zIndex: \"1500\",\r\n        width: \"100%\"\r\n    },\r\n    bar: {\r\n        backgroundColor: \"white\",\r\n        height: \"4px\",\r\n    },\r\n    barColorPrimary: {\r\n        backgroundColor: \"blue\",\r\n    },\r\n}))","import React from \"react\"\r\nimport { Fade, LinearProgress } from \"@material-ui/core\"\r\nimport useStyles from \"./useStyles\"\r\nimport { useStore } from \"eztore\"\r\n\r\nconst LoadingBar = React.memo(props => {\r\n    const [loading] = useStore(\"loading\")\r\n    const classes = useStyles(props)\r\n\r\n    return (\r\n        <Fade\r\n            timeout={500}\r\n            className={classes.root}\r\n            in={loading}>\r\n            <LinearProgress\r\n                classes={{ root: classes.bar, barColorPrimary: classes.barColorPrimary }} />\r\n        </Fade>\r\n    )\r\n})\r\n\r\nexport default LoadingBar","import { makeStyles } from \"@material-ui/styles\"\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        height: \"100%\",\r\n    },\r\n}))","import { useEffect } from \"react\"\r\nimport useStyles from \"./useStyles\"\r\nimport useAPI from \"hooks/useAPI\"\r\n\r\nfunction useLogic(props) {\r\n    const classes = useStyles()\r\n    const { getCurrentWeather } = useAPI()\r\n\r\n    useEffect(() => {\r\n        async function makeRequest() {\r\n            await getCurrentWeather(props.city.id)\r\n        }\r\n\r\n        if (props.city) makeRequest()\r\n    }, [getCurrentWeather, props.city])\r\n\r\n    return { classes }\r\n}\r\n\r\nexport default useLogic","import React from \"react\"\r\nimport useLogic from \"./useLogic\"\r\n\r\nconst CurrentWeather = React.memo(props => {\r\n    const { classes } = useLogic(props)\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            \r\n        </div>\r\n    )\r\n})\r\n\r\nexport default CurrentWeather","import React from \"react\"\r\nimport useLogic from \"./useLogic\"\r\nimport { TextField } from \"@material-ui/core\"\r\nimport Autocomplete from \"components/Autocomplete\"\r\nimport LoadingBar from \"components/LoadingBar\"\r\nimport CurrentWeather from \"components/CurrentWeather\"\r\n\r\nconst Main = props => {\r\n    const { classes, cityName, onChange, onSelect, inputRef, onFocus, onBlur, showDialog } = useLogic()\r\n\r\n    return (\r\n        <div className={classes.root} onClick={onBlur}>\r\n            <LoadingBar />\r\n            <div className={classes.weatherInfo}>\r\n                <CurrentWeather />\r\n            </div>\r\n\r\n            <div className={classes.citySearchContainer}>\r\n                <Autocomplete\r\n                    show={showDialog}\r\n                    onSelect={onSelect}\r\n                    cityName={cityName} />\r\n                <TextField\r\n                    onFocus={onFocus}\r\n                    inputRef={inputRef}\r\n                    fullWidth\r\n                    className={classes.citySearch}\r\n                    value={cityName}\r\n                    onChange={onChange}\r\n                    InputProps={{ classes: { notchedOutline: classes.outline } }}\r\n                    placeholder=\"search city...\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React from \"react\"\r\nimport { CssBaseline, createMuiTheme } from \"@material-ui/core\"\r\nimport { ThemeProvider, StylesProvider, jssPreset } from \"@material-ui/styles\"\r\nimport { Store } from \"eztore\"\r\nimport reducers from \"reducers\"\r\nimport Main from \"components/Main\"\r\nimport {create } from \"jss\"\r\n\r\nconst theme = createMuiTheme()\r\nconst jss = create({\r\n    ...jssPreset(),\r\n    insertionPoint: document.head.lastChild,\r\n})\r\n\r\nconst App = props => {\r\n    return (\r\n        <Store reducers={reducers}>\r\n            <StylesProvider jss={jss}>\r\n                <ThemeProvider theme={theme}>\r\n                    <div>\r\n                        <CssBaseline />\r\n                        <Main />\r\n                    </div>\r\n                </ThemeProvider>\r\n            </StylesProvider>\r\n        </Store>\r\n    )\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"components/App\"\nimport * as serviceWorker from \"serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\nserviceWorker.register()","import { useCallback } from \"react\"\r\nimport { useStore } from \"eztore\"\r\n\r\nfunction useFetch() {\r\n    const [, setLoading] = useStore(\"loading\")\r\n\r\n    const get = useCallback(url => {\r\n        async function makeRequest() {\r\n            setLoading(true)\r\n            let result = null\r\n            try {\r\n                const response = await fetch(url)\r\n                result = await response.text()\r\n                result = JSON.parse(result)\r\n            } catch { }\r\n            setLoading(false)\r\n\r\n            console.log(url, result)\r\n            return result\r\n        }\r\n\r\n        return makeRequest()\r\n    }, [setLoading])\r\n\r\n    return { get }\r\n}\r\n\r\nexport default useFetch","export const API_KEY = \"cd0bb97e1e22bf8367b9dfd4f0a05c2f\"","import { useCallback } from \"react\"\r\nimport useFetch from \"./useFetch\"\r\nimport { API_KEY } from \"libraries/constants\"\r\n\r\nfunction useAPI() {\r\n    const { get } = useFetch()\r\n\r\n    const makeRequest = useCallback(url => get(`${url}&appid=${API_KEY}`), [get])\r\n\r\n    const getCurrentWeather = useCallback(city => makeRequest(`https://api.openweathermap.org/data/2.5/weather?id=${city}`), [makeRequest])\r\n\r\n    const getCities = useCallback(city => {\r\n        return get(`${window.location.protocol}//${window.location.hostname}${window.location.port ? \":\" + window.location.port : \"\"}${process.env.PUBLIC_URL}/city.list.json`)\r\n    }, [get])\r\n\r\n    return { getCurrentWeather, getCities }\r\n}\r\n\r\nexport default useAPI","import { useState, useEffect, useRef } from \"react\"\r\nimport useAPI from \"hooks/useAPI\"\r\nimport { useStore } from \"eztore\"\r\nimport useStyles from \"./useStyles\"\r\n\r\nconst BATCH = 1000\r\n\r\nfunction iterate(cities, citiesByLetter = {}, pos = 0) {\r\n    return new Promise(resolve => {\r\n        for (let i = 0; i < BATCH; i++) {\r\n            const city = cities[pos + i]\r\n            if (!city) break\r\n\r\n            city.name = city.name.charAt(0).toUpperCase() + city.name.slice(1)\r\n            const letter = city.name.charAt(0)\r\n\r\n            if (!citiesByLetter[letter]) citiesByLetter[letter] = []\r\n\r\n            citiesByLetter[letter].push(city)\r\n        }\r\n\r\n        const nextPos = pos + BATCH\r\n        if (nextPos > cities.length) resolve(citiesByLetter)\r\n        else setImmediate(() => resolve(iterate(cities, citiesByLetter, nextPos)))\r\n    })\r\n}\r\n\r\nfunction useLogic() {\r\n    const classes = useStyles()\r\n    const [, setCities] = useStore(\"cities\")\r\n    const [cityName, setCityName] = useState(\"\")\r\n    const [city, setCity] = useState()\r\n    const [showDialog, setShowDialog] = useState(false)\r\n    const { getCities } = useAPI()\r\n    const inputRef = useRef()\r\n\r\n    useEffect(() => {\r\n        async function loadCities() {\r\n            const cities = await getCities()\r\n            setCities(await iterate(cities))\r\n        }\r\n\r\n        loadCities()\r\n    }, [setCities, getCities])\r\n\r\n    function onChange({ target }) {\r\n        setCityName(target.value)\r\n    }\r\n\r\n    function onSelect(city) {\r\n        setCity(city)\r\n        setCityName(\"\")\r\n        inputRef.current.blur()\r\n    }\r\n\r\n    function onFocus() {\r\n        setShowDialog(true)\r\n    }\r\n\r\n    function onBlur() {\r\n        setShowDialog(document.activeElement === inputRef.current)\r\n    }\r\n\r\n    return { classes, cityName, onChange, onSelect, inputRef, onFocus, onBlur, showDialog, city }\r\n}\r\n\r\nexport default useLogic","import { makeStyles } from \"@material-ui/styles\"\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        ...theme.typography.body1,\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    weatherInfo: {\r\n        flex: 1,\r\n        width: \"100%\",\r\n    },\r\n    citySearchContainer: {\r\n        position: \"relative\",\r\n        margin: theme.spacing(4),\r\n        width: \"30%\",\r\n    },\r\n    citySearch: {\r\n        margin: 0,\r\n    },\r\n    outline: {\r\n        borderRadius: theme.spacing(1.5),\r\n    }\r\n}))"],"sourceRoot":""}